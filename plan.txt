Plans for web features:
1. course selection planner:
– currently students have to go through the pdf and find the courses, put it down somewhere on a piece of paper or something, and then
count the number of courses/etc.
– our goal is to make an interface where they can easily and conveniently choose the courses that they want, put it down, and then verify
if they are good for the graduation requirements or maximum courses allowed, number of credts offered, etc. 
– for prerequisite mentioned in the course description, we can add the feature that, based on the user's input about the courses that've already taken
so far, that automatically tells me whether they're missing a prerequisite, when they select this course. Add this feature later once core features are
done. 




Next steps for database:
1. add the grade
2. add the department for all courses; put courses under them in json tree
– English, Languages, Mathematics, Science, HPR, Social Science, Computer Science, Performing Arts, Visual Arts, Study Abroad
3. use title for prerequisite
4. identify any corrupted names from the responses by AI


sample field in json tree:

{
  "department": "Mathematics",
  "courses": [
    {
      "title": "course title",
      "description": "description.",
      "department": "department",
      "rigor": 1, //1, 2 or 3 for reg, advanced, cl respectively
      "gesc": false,
      "ppr": false,
      "term": "term",
      "offered_in_25-26": true,
      "required": false,
      "grades": [9, 10], // this is the target class year that the course will be offered to; if it is offered to all classes, simply put 9, 10, 11, and 12 all on there
      "prerequisite": ["Exact course title", false] //false or true is whether or not the class needs permission of departments. 
    },
    ...
  ]
}


Notes:

– For "STATISTICS I (GESC) winter" and "STATISTICS II (GESC) spring", ignore for now about this course, since information very unclear. 

– for "UPPER-LEVEL LATIN", ignore for now since it's unclear how the course registration works exactly.

- For CL TOPICS IN COMPUTER SCIENCE A and CL TOPICS IN COMPUTER SCIENCE B, it should be two different,
separate json fields, each json having the same information except the true and false for the state of
being offered or not in 2025-26. 

– Clearly examine the subheaders for the arts classes. For example, in the class "ART OF DANCE", delete the 'daytime' description from subheader.
– delete those classes that are offered as "after-school tem" or "physical exertion activity", that are not real classes. 


2. study resources hub: 
– holds various resources for various classes, especially math and sciences 
– For certain classes that we have enough information, we can ask teachers for course syllabus
